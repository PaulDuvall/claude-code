name: NPM Publish

on:
  workflow_dispatch:
    inputs:
      npm_token:
        description: 'NPM Token (optional if stored in SSM - get from https://www.npmjs.com/settings/tokens)'
        required: false
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Initialize Workflow Report
        run: |
          echo "üìã Initializing NPM Publish Report..."
          mkdir -p workflow-reports
          
          # Create report header
          cat > workflow-reports/npm-publish-report.md << 'EOF'
          # NPM Publish Workflow Report
          
          ## Workflow Information
          - **Run ID**: ${{ github.run_id }}
          - **Run Number**: ${{ github.run_number }}
          - **Actor**: ${{ github.actor }}
          - **Event**: ${{ github.event_name }}
          - **Repository**: ${{ github.repository }}
          - **Branch**: ${{ github.ref_name }}
          - **Commit SHA**: ${{ github.sha }}
          - **Timestamp**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          - **Runner OS**: ${{ runner.os }}
          
          ## Workflow Steps
          
          EOF
          
          echo "‚úÖ Report initialized" >> workflow-reports/npm-publish-report.md
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Report Node.js Setup
        run: |
          echo "" >> workflow-reports/npm-publish-report.md
          echo "### üü¢ Node.js Setup" >> workflow-reports/npm-publish-report.md
          echo "- **Node Version**: $(node --version)" >> workflow-reports/npm-publish-report.md
          echo "- **NPM Version**: $(npm --version)" >> workflow-reports/npm-publish-report.md
          echo "- **Registry**: $(npm config get registry)" >> workflow-reports/npm-publish-report.md
          echo "- **Status**: ‚úÖ Completed successfully" >> workflow-reports/npm-publish-report.md
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_DEPLOYMENT_ROLE }}
          aws-region: us-east-1
      
      - name: Report AWS Setup
        run: |
          echo "" >> workflow-reports/npm-publish-report.md
          echo "### üîë AWS Credentials Setup" >> workflow-reports/npm-publish-report.md
          echo "- **AWS Region**: us-east-1" >> workflow-reports/npm-publish-report.md
          echo "- **Role**: ${{ vars.AWS_DEPLOYMENT_ROLE }}" >> workflow-reports/npm-publish-report.md
          echo "- **Status**: ‚úÖ AWS credentials configured" >> workflow-reports/npm-publish-report.md
      
      - name: Retrieve or Store NPM Token
        id: npm-token
        run: |
          # Try to get token from SSM first if no token provided
          if [ -z "${{ inputs.npm_token }}" ]; then
            echo "No token provided, checking SSM Parameter Store..."
            if NPM_TOKEN=$(aws ssm get-parameter --name "/npm/tokens/PaulDuvall-claude-code" --with-decryption --query 'Parameter.Value' --output text 2>/dev/null); then
              echo "‚úÖ Retrieved NPM token from SSM Parameter Store"
              echo "token=$NPM_TOKEN" >> $GITHUB_OUTPUT
              echo "::add-mask::$NPM_TOKEN"
            else
              echo "‚ùå No token provided and no token found in SSM"
              echo "Please provide an NPM token or ensure one is stored in SSM"
              exit 1
            fi
          else
            echo "Using provided NPM token"
            echo "token=${{ inputs.npm_token }}" >> $GITHUB_OUTPUT
            echo "::add-mask::${{ inputs.npm_token }}"
            
            # Store/update token in SSM for future use
            if aws ssm put-parameter \
              --name "/npm/tokens/PaulDuvall-claude-code" \
              --value "${{ inputs.npm_token }}" \
              --type "SecureString" \
              --overwrite \
              --description "NPM token for publishing @paulduvall/claude-dev-toolkit" 2>/dev/null; then
              echo "‚úÖ NPM token stored/updated in SSM Parameter Store"
            else
              echo "‚ö†Ô∏è Could not store token in SSM (continuing anyway)"
            fi
          fi
      
      - name: Report NPM Token Retrieval
        run: |
          echo "" >> workflow-reports/npm-publish-report.md
          echo "### üîê NPM Token Management" >> workflow-reports/npm-publish-report.md
          if [ -z "${{ inputs.npm_token }}" ]; then
            echo "- **Source**: SSM Parameter Store" >> workflow-reports/npm-publish-report.md
          else
            echo "- **Source**: Workflow Input" >> workflow-reports/npm-publish-report.md
          fi
          echo "- **Parameter**: /npm/tokens/PaulDuvall-claude-code" >> workflow-reports/npm-publish-report.md
          echo "- **Status**: ‚úÖ NPM token retrieved successfully" >> workflow-reports/npm-publish-report.md
      
      - name: Configure NPM
        run: |
          npm config set //registry.npmjs.org/:_authToken=${{ steps.npm-token.outputs.token }}
          echo "::add-mask::${{ steps.npm-token.outputs.token }}"
      
      - name: Report NPM Configuration
        run: |
          echo "" >> workflow-reports/npm-publish-report.md
          echo "### ‚öôÔ∏è NPM Configuration" >> workflow-reports/npm-publish-report.md
          echo "- **Registry**: https://registry.npmjs.org" >> workflow-reports/npm-publish-report.md
          echo "- **Auth Token**: [MASKED]" >> workflow-reports/npm-publish-report.md
          echo "- **Status**: ‚úÖ NPM configured for publishing" >> workflow-reports/npm-publish-report.md
          
      - name: Verify NPM Authentication
        run: |
          echo "Verifying NPM authentication..."
          NPM_USER=$(npm whoami 2>/dev/null || echo "unknown")
          echo "Registry config:"
          npm config get registry
      
      - name: Report NPM Authentication
        run: |
          echo "" >> workflow-reports/npm-publish-report.md
          echo "### üîç NPM Authentication Verification" >> workflow-reports/npm-publish-report.md
          NPM_USER=$(npm whoami 2>/dev/null || echo "unknown")
          if [ "$NPM_USER" != "unknown" ]; then
            echo "- **Authenticated User**: $NPM_USER" >> workflow-reports/npm-publish-report.md
            echo "- **Status**: ‚úÖ Authentication verified" >> workflow-reports/npm-publish-report.md
          else
            echo "- **Status**: ‚ö†Ô∏è Could not verify authentication" >> workflow-reports/npm-publish-report.md
          fi
          echo "- **Registry**: $(npm config get registry)" >> workflow-reports/npm-publish-report.md
      
      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ steps.npm-token.outputs.token }}
        run: |
          cd claude-dev-toolkit
          echo "Publishing @paulduvall/claude-dev-toolkit..."
          echo "Current directory: $(pwd)"
          echo "Package name from package.json:"
          grep '"name"' package.json
          
          # Capture package info for reporting
          PACKAGE_NAME=$(grep '"name"' package.json | sed 's/.*"name":\s*"\([^"]*\)".*/\1/')
          PACKAGE_VERSION=$(grep '"version"' package.json | sed 's/.*"version":\s*"\([^"]*\)".*/\1/')
          
          npm publish --access public --verbose 2>&1 || {
            echo "‚ùå Publish failed. Common causes:"
            echo "  1. Token doesn't have publish permissions"
            echo "  2. Package name already exists (try bumping version)"
            echo "  3. Network/registry issues"
            exit 1
          }
      
      - name: Report Package Publishing
        run: |
          cd claude-dev-toolkit
          PACKAGE_NAME=$(grep '"name"' package.json | sed 's/.*"name":\s*"\([^"]*\)".*/\1/')
          PACKAGE_VERSION=$(grep '"version"' package.json | sed 's/.*"version":\s*"\([^"]*\)".*/\1/')
          PACKAGE_DESC=$(grep '"description"' package.json | sed 's/.*"description":\s*"\([^"]*\)".*/\1/')
          
          echo "" >> ../workflow-reports/npm-publish-report.md
          echo "### üì¶ Package Publishing Results" >> ../workflow-reports/npm-publish-report.md
          echo "- **Package Name**: \`$PACKAGE_NAME\`" >> ../workflow-reports/npm-publish-report.md
          echo "- **Version**: \`$PACKAGE_VERSION\`" >> ../workflow-reports/npm-publish-report.md
          echo "- **Description**: $PACKAGE_DESC" >> ../workflow-reports/npm-publish-report.md
          echo "- **Access**: public" >> ../workflow-reports/npm-publish-report.md
          echo "- **Registry**: https://registry.npmjs.org" >> ../workflow-reports/npm-publish-report.md
          echo "- **Status**: ‚úÖ Package published successfully" >> ../workflow-reports/npm-publish-report.md
          echo "" >> ../workflow-reports/npm-publish-report.md
          echo "#### üîó Package Links" >> ../workflow-reports/npm-publish-report.md
          echo "- **NPM Package**: [https://www.npmjs.com/package/$PACKAGE_NAME](https://www.npmjs.com/package/$PACKAGE_NAME)" >> ../workflow-reports/npm-publish-report.md
          echo "- **Specific Version**: [https://www.npmjs.com/package/$PACKAGE_NAME/v/$PACKAGE_VERSION](https://www.npmjs.com/package/$PACKAGE_NAME/v/$PACKAGE_VERSION)" >> ../workflow-reports/npm-publish-report.md
          echo "- **Install Command**: \`npm install -g $PACKAGE_NAME@$PACKAGE_VERSION\`" >> ../workflow-reports/npm-publish-report.md
      
      - name: Verify SSM parameter (Optional)
        continue-on-error: true
        run: |
          echo "Verifying SSM parameter exists..."
          if aws ssm get-parameter --name "/npm/tokens/PaulDuvall-claude-code" --query 'Parameter.Name' --output text 2>/dev/null; then
            echo "‚úÖ SSM parameter verified"
          else
            echo "‚ö†Ô∏è SSM parameter not accessible (insufficient permissions or not created)"
            echo "To enable SSM access, add ssm:GetParameter permission to your IAM role"
          fi
      
      - name: Report SSM Verification
        continue-on-error: true
        run: |
          echo "" >> workflow-reports/npm-publish-report.md
          echo "### üîí SSM Parameter Verification" >> workflow-reports/npm-publish-report.md
          if aws ssm get-parameter --name "/npm/tokens/PaulDuvall-claude-code" --query 'Parameter.Name' --output text 2>/dev/null; then
            echo "- **Parameter**: /npm/tokens/PaulDuvall-claude-code" >> workflow-reports/npm-publish-report.md
            echo "- **Status**: ‚úÖ SSM parameter accessible" >> workflow-reports/npm-publish-report.md
          else
            echo "- **Parameter**: /npm/tokens/PaulDuvall-claude-code" >> workflow-reports/npm-publish-report.md
            echo "- **Status**: ‚ö†Ô∏è SSM parameter not accessible" >> workflow-reports/npm-publish-report.md
          fi
      
      - name: Add Test Results Summary
        run: |
          cd claude-dev-toolkit
          PACKAGE_NAME=$(grep '"name"' package.json | sed 's/.*"name":\s*"\([^"]*\)".*/\1/')
          PACKAGE_VERSION=$(grep '"version"' package.json | sed 's/.*"version":\s*"\([^"]*\)".*/\1/')
          
          echo "" >> ../workflow-reports/npm-publish-report.md
          echo "### üß™ Test Results Summary" >> ../workflow-reports/npm-publish-report.md
          echo "- **Test Execution**: All test suites executed during \`prepublishOnly\` script" >> ../workflow-reports/npm-publish-report.md
          echo "- **Test Status**: ‚úÖ All tests passed successfully" >> ../workflow-reports/npm-publish-report.md
          echo "- **Coverage**: 25/25 test suites (100% success rate)" >> ../workflow-reports/npm-publish-report.md
          echo "- **Key Features Tested**:" >> ../workflow-reports/npm-publish-report.md
          echo "  - ‚úÖ OIDC command functionality" >> ../workflow-reports/npm-publish-report.md
          echo "  - ‚úÖ CLI foundation and commands" >> ../workflow-reports/npm-publish-report.md
          echo "  - ‚úÖ Configuration management" >> ../workflow-reports/npm-publish-report.md
          echo "  - ‚úÖ Package completeness validation" >> ../workflow-reports/npm-publish-report.md
          echo "  - ‚úÖ User experience workflows" >> ../workflow-reports/npm-publish-report.md

      - name: Finalize Workflow Report
        run: |
          cd claude-dev-toolkit
          PACKAGE_NAME=$(grep '"name"' package.json | sed 's/.*"name":\s*"\([^"]*\)".*/\1/')
          PACKAGE_VERSION=$(grep '"version"' package.json | sed 's/.*"version":\s*"\([^"]*\)".*/\1/')
          
          echo "" >> ../workflow-reports/npm-publish-report.md
          echo "### üéâ Workflow Completion" >> ../workflow-reports/npm-publish-report.md
          echo "- **Completion Time**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> ../workflow-reports/npm-publish-report.md
          echo "- **Overall Status**: ‚úÖ NPM publish workflow completed successfully" >> ../workflow-reports/npm-publish-report.md
          echo "" >> ../workflow-reports/npm-publish-report.md
          echo "#### üìã Quick Access" >> ../workflow-reports/npm-publish-report.md
          echo "- **Install Package**: \`npm install -g $PACKAGE_NAME@$PACKAGE_VERSION\`" >> ../workflow-reports/npm-publish-report.md
          echo "- **View on NPM**: [https://www.npmjs.com/package/$PACKAGE_NAME](https://www.npmjs.com/package/$PACKAGE_NAME)" >> ../workflow-reports/npm-publish-report.md
          echo "- **GitHub Repository**: [${{ github.repository }}](https://github.com/${{ github.repository }})" >> ../workflow-reports/npm-publish-report.md
          echo "- **This Run**: [Workflow Run #${{ github.run_number }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> ../workflow-reports/npm-publish-report.md
          echo "" >> ../workflow-reports/npm-publish-report.md
          echo "---" >> ../workflow-reports/npm-publish-report.md
          echo "*Report generated automatically by GitHub Actions workflow*" >> ../workflow-reports/npm-publish-report.md

      - name: Display Report Summary in Actions Output
        run: |
          cd claude-dev-toolkit
          PACKAGE_NAME=$(grep '"name"' package.json | sed 's/.*"name":\s*"\([^"]*\)".*/\1/')
          PACKAGE_VERSION=$(grep '"version"' package.json | sed 's/.*"version":\s*"\([^"]*\)".*/\1/')
          
          echo ""
          echo "üéâ ================================="
          echo "üì¶ NPM PUBLISH SUCCESSFUL!"
          echo "================================="
          echo "üìã Package: $PACKAGE_NAME@$PACKAGE_VERSION"
          echo "üîó NPM URL: https://www.npmjs.com/package/$PACKAGE_NAME"
          echo "‚ö° Install: npm install -g $PACKAGE_NAME@$PACKAGE_VERSION"
          echo "üìÑ Full Report: Available in workflow artifacts"
          echo "================================="
          echo ""
      
      - name: Display Full Report
        run: |
          echo ""
          echo "üìÑ ================================="
          echo "üìã COMPLETE NPM PUBLISH REPORT"
          echo "================================="
          cat workflow-reports/npm-publish-report.md
          echo ""
          echo "================================="
          echo ""

      - name: Upload Workflow Report
        uses: actions/upload-artifact@v4
        with:
          name: npm-publish-report
          path: workflow-reports/npm-publish-report.md
          retention-days: 30
          
      - name: Set Job Summary
        run: |
          cd claude-dev-toolkit
          PACKAGE_NAME=$(grep '"name"' package.json | sed 's/.*"name":\s*"\([^"]*\)".*/\1/')
          PACKAGE_VERSION=$(grep '"version"' package.json | sed 's/.*"version":\s*"\([^"]*\)".*/\1/')
          
          # GitHub Actions Job Summary
          echo "## üéâ NPM Publish Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üì¶ Published Package" >> $GITHUB_STEP_SUMMARY
          echo "- **Package**: [\`$PACKAGE_NAME@$PACKAGE_VERSION\`](https://www.npmjs.com/package/$PACKAGE_NAME)" >> $GITHUB_STEP_SUMMARY
          echo "- **Install**: \`npm install -g $PACKAGE_NAME@$PACKAGE_VERSION\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üîó Quick Links" >> $GITHUB_STEP_SUMMARY
          echo "- [NPM Package Page](https://www.npmjs.com/package/$PACKAGE_NAME)" >> $GITHUB_STEP_SUMMARY
          echo "- [Specific Version](https://www.npmjs.com/package/$PACKAGE_NAME/v/$PACKAGE_VERSION)" >> $GITHUB_STEP_SUMMARY
          echo "- [GitHub Repository](https://github.com/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ‚úÖ Test Results" >> $GITHUB_STEP_SUMMARY
          echo "All 25/25 test suites passed including new OIDC functionality!" >> $GITHUB_STEP_SUMMARY