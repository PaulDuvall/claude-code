name: Publish to Public NPM Registry

on:
  workflow_dispatch:
    inputs:
      confirm_publish:
        description: 'Confirm you want to publish to public npm registry'
        required: true
        default: 'no'
        type: choice
        options:
        - 'no'
        - 'yes'
  push:
    tags:
      - 'v*'
    branches:
      - main
    paths:
      - 'claude-dev-toolkit/**'
      - '.github/workflows/publish-public.yml'

env:
  NODE_VERSION: '18'
  PACKAGE_DIR: './claude-dev-toolkit'

jobs:
  validate-and-test:
    runs-on: ubuntu-latest
    outputs:
      should-publish: ${{ steps.check.outputs.should-publish }}
      package-version: ${{ steps.version.outputs.version }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          cd ${{ env.PACKAGE_DIR }}
          npm ci

      - name: Run validation
        run: |
          cd ${{ env.PACKAGE_DIR }}
          npm run validate

      - name: Run tests
        run: |
          cd ${{ env.PACKAGE_DIR }}
          npm test

      - name: Extract package version
        id: version
        run: |
          cd ${{ env.PACKAGE_DIR }}
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Package version: $VERSION"

      - name: Check if should publish
        id: check
        run: |
          SHOULD_PUBLISH="false"
          
          # Check if manual workflow dispatch with confirmation
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ github.event.inputs.confirm_publish }}" == "yes" ]]; then
              SHOULD_PUBLISH="true"
              echo "✅ Manual publish confirmed"
            else
              echo "❌ Manual publish not confirmed"
            fi
          fi
          
          # Check if tag push
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_type }}" == "tag" ]]; then
            SHOULD_PUBLISH="true"
            echo "✅ Tag push detected: ${{ github.ref_name }}"
          fi
          
          echo "should-publish=$SHOULD_PUBLISH" >> $GITHUB_OUTPUT

  publish-public:
    needs: validate-and-test
    runs-on: ubuntu-latest
    if: needs.validate-and-test.outputs.should-publish == 'true'
    
    environment: 
      name: npm-public
      url: https://www.npmjs.com/package/claude-dev-toolkit

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
          scope: '@claude-dev-toolkit'

      - name: Install dependencies
        run: |
          cd ${{ env.PACKAGE_DIR }}
          npm ci

      - name: Configure package for public registry
        run: |
          cd ${{ env.PACKAGE_DIR }}
          # Backup original package.json
          cp package.json package.json.backup
          
          # Configure for public registry
          npm pkg set name="claude-dev-toolkit"
          npm pkg set publishConfig.registry="https://registry.npmjs.org"
          npm pkg set publishConfig.access="public"
          
          echo "📦 Package configured for public registry"
          npm pkg get name publishConfig

      - name: Verify authentication
        run: |
          cd ${{ env.PACKAGE_DIR }}
          npm whoami --registry=https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create package tarball
        run: |
          cd ${{ env.PACKAGE_DIR }}
          npm pack --dry-run

      - name: Publish to NPM
        run: |
          cd ${{ env.PACKAGE_DIR }}
          npm publish --registry=https://registry.npmjs.org --access=public
          echo "✅ Successfully published to NPM!"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create release tag
        if: github.event_name == 'workflow_dispatch'
        run: |
          VERSION="${{ needs.validate-and-test.outputs.package-version }}"
          TAG_NAME="v$VERSION"
          
          # Check if tag already exists
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "🏷️ Tag $TAG_NAME already exists"
          else
            echo "🏷️ Creating tag $TAG_NAME"
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag -a "$TAG_NAME" -m "Release version $VERSION"
            git push origin "$TAG_NAME"
            echo "✅ Tag $TAG_NAME created and pushed"
          fi

      - name: Create GitHub Release
        if: success()
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.validate-and-test.outputs.package-version }}
          release_name: Release v${{ needs.validate-and-test.outputs.package-version }}
          body: |
            # Claude Dev Toolkit v${{ needs.validate-and-test.outputs.package-version }} 🚀

            🎉 **Successfully published to NPM Registry!** This release includes 57+ custom slash commands for Claude Code that accelerate software development workflows through AI-powered automation.

            ## 📦 Quick Installation

            ### Option 1: Global Installation (Recommended)
            ```bash
            npm install -g claude-dev-toolkit
            ```

            ### Option 2: Project Dependency
            ```bash
            npm install claude-dev-toolkit --save-dev
            ```

            ### Option 3: One-Command Setup (Includes Claude Code Installation)
            ```bash
            npx claude-dev-toolkit setup
            ```

            ## 🔧 Configuration & Setup

            After installation, configure Claude Code with the custom commands:

            ```bash
            # Run the setup wizard
            claude-dev-toolkit configure

            # Or use the one-command installer
            bash <(curl -s https://raw.githubusercontent.com/PaulDuvall/claude-code/main/setup.sh)
            ```

            ## 🎯 Available Commands (57 total)

            ### 🏗️ Core Development Commands
            ```bash
            /xarchitecture  # System architecture design
            /xrefactor      # Interactive code refactoring
            /xquality       # Code quality analysis
            /xtest          # Comprehensive testing
            /xdebug         # Advanced debugging
            /xsecurity      # Security scanning
            ```

            ### 🚀 CI/CD & Deployment
            ```bash
            /xgit           # Automated Git workflow
            /xpipeline      # Build pipeline optimization
            /xrelease       # Release management
            /xcicd          # Advanced CI/CD
            ```

            ### 📋 Planning & Documentation
            ```bash
            /xplanning      # Project planning
            /xdocs          # Documentation generation
            /xspec          # Specification creation
            ```

            ## 🚦 Verification Steps

            1. **Verify Installation**:
               ```bash
               npm list -g claude-dev-toolkit
               # Should show: claude-dev-toolkit@${{ needs.validate-and-test.outputs.package-version }}
               ```

            2. **Test Claude Code Integration**:
               ```bash
               # Start Claude Code and test a command
               /xhelp
               ```

            3. **Validate Setup**:
               ```bash
               claude-dev-toolkit validate
               ```

            ## 🔗 Package Information

            | Detail | Value |
            |--------|--------|
            | **NPM Package** | [claude-dev-toolkit](https://www.npmjs.com/package/claude-dev-toolkit) |
            | **Registry** | https://registry.npmjs.org |
            | **Version** | `${{ needs.validate-and-test.outputs.package-version }}` |
            | **Node.js** | >= 16.0.0 |
            | **License** | MIT |

            ## 📚 Documentation & Resources

            - 📖 [Installation Guide](https://github.com/PaulDuvall/claude-code/blob/main/README.md)
            - 🔧 [Command Reference](https://github.com/PaulDuvall/claude-code/blob/main/docs/claude-custom-commands.md)
            - ⚡ [Quick Start Guide](https://github.com/PaulDuvall/claude-code/blob/main/docs/post-advanced-claude-code.md)
            - 🔐 [Security Hooks](https://github.com/PaulDuvall/claude-code/blob/main/docs/claude-code-hooks-system.md)

            ## 🐛 Troubleshooting

            ### Common Issues & Solutions

            **❌ Command not found after global install**
            ```bash
            # Check npm global path
            npm config get prefix
            # Add to PATH: export PATH=$PATH:$(npm config get prefix)/bin
            ```

            **❌ Permission errors on macOS/Linux**
            ```bash
            # Fix npm permissions
            sudo chown -R $(whoami) $(npm config get prefix)/{lib/node_modules,bin,share}
            ```

            **❌ Claude Code not recognizing commands**
            ```bash
            # Reconfigure Claude Code
            claude-dev-toolkit configure --force
            ```

            ### Getting Help
            - 🆘 [Troubleshooting Guide](https://github.com/PaulDuvall/claude-code/blob/main/troubleshooting.md)
            - 🐛 [Report Issues](https://github.com/PaulDuvall/claude-code/issues)
            - 💬 [Discussions](https://github.com/PaulDuvall/claude-code/discussions)

            ## 🔄 Update Instructions

            ```bash
            # Update to latest version
            npm update -g claude-dev-toolkit

            # Check current version
            npm list -g claude-dev-toolkit

            # Reconfigure after update
            claude-dev-toolkit configure
            ```

            ## 🎯 Next Steps After Installation

            1. **Verify Setup**: Run `claude-dev-toolkit validate`
            2. **Explore Commands**: Use `/xhelp` in Claude Code
            3. **Start with Quality**: Try `/xquality --help`
            4. **Test Git Integration**: Use `/xgit --status`
            5. **Join Community**: Check our [GitHub Discussions](https://github.com/PaulDuvall/claude-code/discussions)

            ## 🔒 Security Features

            This package includes built-in security features:
            - 🛡️ Credential exposure prevention
            - 🔍 Security scanning commands
            - 📝 Audit trail logging
            - 🔐 Secure configuration templates

            ---

            **📊 Package Stats**: 57 custom commands | 13 active workflows | 44 experimental features

            🤖 *This release was automatically published to NPM and tagged via GitHub Actions*
          draft: false
          prerelease: false

      - name: Notify success
        if: success()
        run: |
          echo "🎉 Publication successful!"
          echo "📦 Package: https://www.npmjs.com/package/claude-dev-toolkit"
          echo "🏷️ Version: ${{ needs.validate-and-test.outputs.package-version }}"
          echo "📋 Next steps:"
          echo "  1. Monitor NPM package downloads"
          echo "  2. Update documentation with new version"
          echo "  3. Announce release to community"

      - name: Cleanup on failure
        if: failure()
        run: |
          cd ${{ env.PACKAGE_DIR }}
          if [[ -f "package.json.backup" ]]; then
            mv package.json.backup package.json
            echo "📦 Restored original package.json"
          fi
          echo "❌ Publication failed - check logs above"