{
  "metadata": {
    "generatedFrom": "../docs/manual-uninstall-install-guide.md",
    "generatedAt": "2025-08-23T19:08:40.944Z",
    "totalSteps": 32,
    "sections": [
      "Method 1: NPM Package Uninstall",
      "Method 2: Repository-Based Uninstall",
      "Method 1: NPM Package Installation (Recommended)",
      "Method 2: Repository-Based Installation (Advanced)",
      "Common Steps (Both Methods)",
      "Security Considerations",
      "Version Control Best Practices",
      "Using Custom Commands",
      "Troubleshooting"
    ]
  },
  "testSteps": [
    {
      "section": "Method 1: NPM Package Uninstall",
      "step": "Step 1: Uninstall the NPM Package",
      "description": "",
      "commands": [
        {
          "raw": "npm uninstall -g @paulduvall/claude-dev-toolkit",
          "type": "uninstall",
          "dangerous": false,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "npm list -g @paulduvall/claude-dev-toolkit",
          "type": "verification",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [
        {
          "type": "output",
          "expected": "(empty)",
          "command": "npm list -g @paulduvall/claude-dev-toolkit"
        }
      ],
      "lineNumber": 21
    },
    {
      "section": "Method 1: NPM Package Uninstall",
      "step": "Step 2: Remove Custom Commands",
      "description": "",
      "commands": [
        {
          "raw": "rm -rf ~/.claude/commands/",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "rm -rf .claude/commands/",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 32
    },
    {
      "section": "Method 1: NPM Package Uninstall",
      "step": "Step 3: Remove Hooks",
      "description": "",
      "commands": [
        {
          "raw": "rm -rf ~/.claude/hooks/",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "rm -rf .claude/hooks/",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 43
    },
    {
      "section": "Method 1: NPM Package Uninstall",
      "step": "Step 4: Remove AI Subagents",
      "description": "",
      "commands": [
        {
          "raw": "rm -rf ~/.claude/sub-agents/",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "rm -rf .claude/sub-agents/",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 54
    },
    {
      "section": "Method 1: NPM Package Uninstall",
      "step": "Step 5: Clean Configuration Files (Optional)",
      "description": "**Note**: If you installed via repository method, you only need to clean up the deployed files:\n",
      "commands": [
        {
          "raw": "rm -rf ~/.claude/config/",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 64
    },
    {
      "section": "Method 2: Repository-Based Uninstall",
      "step": "Step 1: Remove Custom Commands",
      "description": "",
      "commands": [
        {
          "raw": "rm -rf ~/.claude/commands/",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "rm -rf .claude/commands/",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 76
    },
    {
      "section": "Method 2: Repository-Based Uninstall",
      "step": "Step 2: Remove Hooks",
      "description": "",
      "commands": [
        {
          "raw": "rm -rf ~/.claude/hooks/",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "rm -rf .claude/hooks/",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 86
    },
    {
      "section": "Method 2: Repository-Based Uninstall",
      "step": "Step 3: Remove AI Subagents",
      "description": "",
      "commands": [
        {
          "raw": "rm -rf ~/.claude/sub-agents/",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "rm -rf .claude/sub-agents/",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 96
    },
    {
      "section": "Method 2: Repository-Based Uninstall",
      "step": "Step 4: Clean Configuration Files (Optional)",
      "description": "",
      "commands": [
        {
          "raw": "rm -rf ~/.claude/config/",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 106
    },
    {
      "section": "Method 2: Repository-Based Uninstall",
      "step": "Step 5: Remove Repository (Optional)",
      "description": "**Choose your preferred installation method:**\n",
      "commands": [
        {
          "raw": "rm -rf ~/claude-code",
          "type": "cleanup",
          "dangerous": true,
          "requiresConfirmation": true,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 114
    },
    {
      "section": "Method 1: NPM Package Installation (Recommended)",
      "step": "Step 1: Install Claude Code (if not already installed)",
      "description": "",
      "commands": [
        {
          "raw": "npm install -g @anthropic-ai/claude-code",
          "type": "install",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 120000
        },
        {
          "raw": "claude --version",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 128
    },
    {
      "section": "Method 1: NPM Package Installation (Recommended)",
      "step": "Step 2: Install Claude Dev Toolkit",
      "description": "",
      "commands": [
        {
          "raw": "npm install -g @paulduvall/claude-dev-toolkit",
          "type": "install",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 120000
        },
        {
          "raw": "claude-commands --version",
          "type": "toolkit",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 138
    },
    {
      "section": "Method 1: NPM Package Installation (Recommended)",
      "step": "Step 3: Deploy Core Commands",
      "description": "",
      "commands": [
        {
          "raw": "claude-commands install --active",
          "type": "toolkit",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 148
    },
    {
      "section": "Method 1: NPM Package Installation (Recommended)",
      "step": "Step 4: Install AI Subagents (Optional)",
      "description": "",
      "commands": [
        {
          "raw": "claude-commands subagents --install",
          "type": "toolkit",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 160
    },
    {
      "section": "Method 1: NPM Package Installation (Recommended)",
      "step": "Step 5: Configure Settings",
      "description": "",
      "commands": [
        {
          "raw": "claude-commands config",
          "type": "toolkit",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "claude-commands config --template comprehensive-settings.json",
          "type": "toolkit",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 172
    },
    {
      "section": "Method 1: NPM Package Installation (Recommended)",
      "step": "Step 6: Install Experimental Commands (Optional)",
      "description": "",
      "commands": [
        {
          "raw": "claude-commands install --experimental",
          "type": "toolkit",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "claude-commands install --all",
          "type": "toolkit",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 182
    },
    {
      "section": "Method 2: Repository-Based Installation (Advanced)",
      "step": "Step 1: Clone the Repository",
      "description": "",
      "commands": [
        {
          "raw": "git clone https://github.com/PaulDuvall/claude-code.git",
          "type": "git",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 60000
        },
        {
          "raw": "cd claude-code",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 194
    },
    {
      "section": "Method 2: Repository-Based Installation (Advanced)",
      "step": "Step 2: Set Environment Variables",
      "description": "",
      "commands": [
        {
          "raw": "export ANTHROPIC_API_KEY=$YOUR_ACTUAL_API_KEY",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "echo \"export ANTHROPIC_API_KEY=\\$YOUR_ACTUAL_API_KEY\" >> ~/.zshrc",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "source ~/.zshrc",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 202
    },
    {
      "section": "Method 2: Repository-Based Installation (Advanced)",
      "step": "Step 3: Run Complete Setup",
      "description": "**Alternative: Manual Repository Installation Steps**\n",
      "commands": [
        {
          "raw": "./setup.sh",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "./setup.sh --dry-run",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 213
    },
    {
      "section": "Method 2: Repository-Based Installation (Advanced)",
      "step": "Step 4: Configure Claude Code",
      "description": "",
      "commands": [
        {
          "raw": "./configure-claude-code.sh",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 225
    },
    {
      "section": "Method 2: Repository-Based Installation (Advanced)",
      "step": "Step 5: Deploy Custom Commands",
      "description": "",
      "commands": [
        {
          "raw": "./deploy.sh",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "./deploy.sh --experiments",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "./deploy.sh --all",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 232
    },
    {
      "section": "Method 2: Repository-Based Installation (Advanced)",
      "step": "Step 6: Install AI Subagents",
      "description": "",
      "commands": [
        {
          "raw": "./deploy-subagents.sh",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 245
    },
    {
      "section": "Common Steps (Both Methods)",
      "step": "Create Project Context (CLAUDE.md)",
      "description": "Create a `CLAUDE.md` file in your project root to provide Claude with project-specific context:\n",
      "commands": [
        {
          "raw": "cd /path/to/your/project",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "cat > CLAUDE.md << 'EOF'",
          "type": "filesystem",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "[Describe your project here]",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "[Define your development principles]",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "[Specify coding standards and practices]",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "[Define security requirements]",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "EOF",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 254
    },
    {
      "section": "Security Considerations",
      "step": "Set Up Hooks (Optional)",
      "description": "**For NPM Package Installation:**\n**For Repository-Based Installation:**\n",
      "commands": [
        {
          "raw": "mkdir -p ~/.claude/hooks/",
          "type": "filesystem",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "chmod 700 ~/.claude/hooks/",
          "type": "permissions",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "echo \"Hooks installation is handled during package installation\"",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "echo \"Available hooks: file-logger, prevent-credential-exposure\"",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "mkdir -p ~/.claude/hooks/",
          "type": "filesystem",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "chmod 700 ~/.claude/hooks/",
          "type": "permissions",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "cp hooks/prevent-credential-exposure.sh ~/.claude/hooks/",
          "type": "filesystem",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "chmod +x ~/.claude/hooks/prevent-credential-exposure.sh",
          "type": "permissions",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "cp hooks/*.sh ~/.claude/hooks/",
          "type": "filesystem",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "chmod +x ~/.claude/hooks/*.sh",
          "type": "permissions",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 280
    },
    {
      "section": "Security Considerations",
      "step": "Verify Installation",
      "description": "**For NPM Package Installation:**\n**For Repository-Based Installation:**\nThe `./setup.sh` script supports different setup types:\nTo prevent losing customizations (as described in the original post):\n",
      "commands": [
        {
          "raw": "claude --version",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "ls ~/.claude/commands/x*.md",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "claude-commands list",
          "type": "toolkit",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "claude --version",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "ls ~/.claude/commands/x*.md",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "./verify-setup.sh --verbose",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "./validate-commands.sh",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "./setup.sh --setup-type basic",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "./setup.sh --setup-type security",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "./setup.sh --setup-type comprehensive",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "./setup.sh --force",
          "type": "general",
          "dangerous": true,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "./setup.sh --skip-configure --skip-hooks",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 309
    },
    {
      "section": "Version Control Best Practices",
      "step": "Backup Your Customizations",
      "description": "",
      "commands": [
        {
          "raw": "mkdir ~/my-claude-customizations",
          "type": "filesystem",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "cd ~/my-claude-customizations",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "git init",
          "type": "git",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "cp -r ~/.claude .claude",
          "type": "filesystem",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "mkdir -p .claude/commands .claude/hooks .claude/sub-agents .claude/config",
          "type": "filesystem",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "git add .",
          "type": "git",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "git commit -m \"Initial Claude Code customization backup\"",
          "type": "git",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "git remote add origin YOUR_REPOSITORY_URL",
          "type": "git",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "git push -u origin main",
          "type": "git",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 363
    },
    {
      "section": "Version Control Best Practices",
      "step": "Create Backup Script",
      "description": "Once installed, use the commands in Claude Code:\n",
      "commands": [
        {
          "raw": "cat > backup-claude.sh << 'EOF'",
          "type": "filesystem",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "cp -r ~/.claude/* .claude/",
          "type": "filesystem",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "git add .",
          "type": "git",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "git commit -m \"Update Claude customizations $(date +%Y-%m-%d)\"",
          "type": "git",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "git push",
          "type": "git",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "EOF",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "chmod +x backup-claude.sh",
          "type": "permissions",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 386
    },
    {
      "section": "Using Custom Commands",
      "step": "Core Development Commands",
      "description": "",
      "commands": [
        {
          "raw": "/xtest        # Run tests with coverage",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "/xquality     # Check code quality with linting",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "/xsecurity    # Scan for vulnerabilities",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "/xgit         # Automated commit workflow",
          "type": "git",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 405
    },
    {
      "section": "Using Custom Commands",
      "step": "Advanced Commands",
      "description": "",
      "commands": [
        {
          "raw": "/xpipeline    # CI/CD pipeline management",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "/xrelease     # Release management",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "/xconfig      # Configuration management",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "/xarchitecture # System architecture design",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "/xrefactor    # Interactive code refactoring",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "/xdebug       # Advanced debugging assistance",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 414
    },
    {
      "section": "Troubleshooting",
      "step": "Commands Not Appearing in Claude Code",
      "description": "",
      "commands": [
        {
          "raw": "pkill -f claude-code",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "ls -la ~/.claude/commands/",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "./validate-commands.sh",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 427
    },
    {
      "section": "Troubleshooting",
      "step": "Permission Issues",
      "description": "",
      "commands": [
        {
          "raw": "chmod -R 755 ~/.claude",
          "type": "permissions",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 440
    },
    {
      "section": "Troubleshooting",
      "step": "Installation Issues",
      "description": "1. **Dual Installation Methods**: Available both as npm package (`@paulduvall/claude-dev-toolkit`) and repository-based installation\n2. **Customization Storage**: All customizations stored in `~/.claude/` (machine-wide) or `.claude/` (project-specific)\n3. **Version Control**: Always backup your `.claude/` directory to prevent loss\n4. **CLAUDE.md**: Project context file essential for consistent behavior\n5. **Command Prefix**: All custom commands use \"x\" prefix (e.g., `/xtest`, `/xgit`)\n6. **NPM Package**: Use `claude-commands` CLI after installing npm package\n7. **Repository-Based**: Use shell scripts (`./setup.sh`, `./deploy.sh`, etc.) after cloning repository\n- Repository: https://github.com/PaulDuvall/claude-code\n- Claude Code Documentation: https://docs.anthropic.com/en/docs/claude-code/\n- AI Development Patterns: https://github.com/PaulDuvall/ai-development-patterns\n- Slash Commands Documentation: https://docs.anthropic.com/en/docs/claude-code/slash-commands\n- Hooks Documentation: https://docs.anthropic.com/en/docs/claude-code/hooks\n- Sub-Agents Documentation: https://docs.anthropic.com/en/docs/claude-code/sub-agents\nThis toolkit transforms Claude Code into a comprehensive development platform that:\n- Automates repetitive tasks through 57 custom slash commands\n- Enforces security and quality standards through hooks\n- Provides intelligent assistance through AI subagents\n- Maintains project context through CLAUDE.md\n- Supports dual installation methods (npm package and repository-based)\n- Supports backup and version control for persistence\n**Key Installation Commands**:\n- **NPM Package**: `npm install -g @paulduvall/claude-dev-toolkit`\n- **Repository-Based**: `./setup.sh` (after cloning the repository)\n",
      "commands": [
        {
          "raw": "./setup.sh --force",
          "type": "general",
          "dangerous": true,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        },
        {
          "raw": "./verify-setup.sh --verbose",
          "type": "general",
          "dangerous": false,
          "requiresConfirmation": false,
          "expectedExitCode": 0,
          "timeout": 10000
        }
      ],
      "validations": [],
      "lineNumber": 447
    }
  ],
  "testMatrix": {
    "platforms": [
      "ubuntu-latest",
      "macos-latest"
    ],
    "nodeVersions": [
      "18.x",
      "20.x"
    ],
    "scenarios": [
      {
        "name": "fresh-install",
        "description": "Clean installation on fresh system",
        "skipUninstall": true
      },
      {
        "name": "reinstall",
        "description": "Uninstall and reinstall existing installation",
        "skipUninstall": false
      },
      {
        "name": "upgrade",
        "description": "Upgrade from previous version",
        "skipUninstall": false,
        "installPreviousVersion": true
      }
    ]
  }
}
